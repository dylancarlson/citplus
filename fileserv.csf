ษออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออป
บ                                                                            บ
บ This script file is designed to be used as a file server for network file  บ
บ requests.  To use it on your board, place this file in your #SCRIPTPATH    บ
บ as set in CONFIG.CIT.  (If you don't have a #SCRIPTPATH set, then place it บ
บ in your #HOMEPATH; that's the default #SCRIPTPATH.)  Then edit your        บ
บ EXTERNAL.CIT file and add the line:                                        บ
บ                                                                            บ
บ            #NETCOMMAND "FILEREQ" "FILESERV"                                บ
บ                                                                            บ
บ Then create a file named FILESERV.CFG in your #SCRIPTPATH with the         บ
บ following keywords:                                                        บ
บ                                                                            บ
บ    #DIRECTORY path                                                         บ
บ        The full path to the files to be made available by the file server. บ
บ                                                                            บ
บ    #LISTTYPE type                                                          บ
บ        type is one of the following:                                       บ
บ                                                                            บ
บ            NONE   No file list is available                                บ
บ                                                                            บ
บ            AUTO   A listing is automatically generated that includes the   บ
บ                   name, size, and time/date stamp of every file in the     บ
บ                   directory specified by #DIRECTORY.                       บ
บ                                                                            บ
บ            FILE   A file named FILELIST.TXT in the directory specified by  บ
บ                   #DIRECTORY is sent as the file list.                     บ
บ                                                                            บ
บ    #NOSEND alias                                                           บ
บ        Specifies an alias of a direct connect that you will not send files บ
บ        through.  You can specify as many as these as you want.  This can   บ
บ        be used to avoid sending files through long-distance connections,   บ
บ        or through a board that you know to be low on disk space.           บ
บ                                                                            บ
บ    #PASSWORD filename password                                             บ
บ        This sets certain files to be password-protected, so only people    บ
บ        who know the password may request these files.  You can specify as  บ
บ        many password-protected files as you wish, but the password is      บ
บ        limitted to 30 characters.                                          บ
บ                                                                            บ
บ Now just create the directory specified by #DIRECTORY and put files in it. บ
บ                                                                            บ
วฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤถ
บ                                                                            บ
บ To request files from the file server, people on other nodes should send a บ
บ message to your node (that is, to "nodename @ nodename", such as "The      บ
บ Anticlimactic Teleservice @ The Anticlimactic Teleservice") with the       บ
บ subject "FILEREQ" and one of the following for the text:                   บ
บ                                                                            บ
บ    FILELIST                                                                บ
บ        This causes the server to repsond as specified by #LISTTYPE in      บ
บ        FILESERV.CFG.                                                       บ
บ                                                                            บ
บ    GETFILE "filename" "path" ["password"]                                  บ
บ        This is an actual request for the file.  "filename" is the MS-DOS   บ
บ        file name of the file being requested.  This file must be present   บ
บ        in the directory specified by #DIRECTORY in FILESERV.CFG.  "path"   บ
บ        is the path to send the file to.  Use only aliases in the path. For บ
บ        example, "aaa!bbb!ccc!ddd".  Do not use Location Identifiers.  It   บ
บ        is up to the requester to enter a valid path.  The only checking    บ
บ        that the file server does (or even can do) is that the first node   บ
บ        on the path is a direct connect, and that it is not specified in    บ
บ        FILESERV.CFG as a #NOSEND board.  If the file being requested is    บ
บ        password-protected as set by #PASSWORD in FILESERV.CFG, then the    บ
บ        password must be provided, and be correct.                          บ
บ                                                                            บ
วฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤฤถ
บ                                                                            บ
บ If you have any questions on the use of this script, ask them in the       บ
บ GremCit Test> room on the network.  Feel free to modify this script in any บ
บ way you desire to make it useful for you.                                  บ
บ                                                                            บ
ศออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออออผ

#VERSION 65141

#GVAR String128 _WorkingDirectory

Possible _ListType values: 0 - NONE; 1 - AUTO; 2 - FILE
#GVAR Integer _ListType

#FUNC _Main VOID

    #CALL DoCCR
    #CALL PrintC "FileServer 0.90 - December 3, 1995"
    #CALL DoCCR

    #CALL _ReadConfigFile
    #IF _Result

       #LVAR String255 _Command

       #CALL GetNetCommandText
       #ASGN _Command _Result

       #CALL GetParam _Command 1
       #EQ _Result "FILELIST"
       #IF _Result

           #CALL _DoFileList

       #ELSE

           #CALL GetParam _Command 1
           #EQ _Result "GETFILE"
           #IF _Result

                #LVAR String15 _FileName
                #LVAR String30 _Password

                #CALL GetParam _Command 2
                #ASGN _FileName _Result

                #CALL GetParam _Command 4
                #ASGN _Password _Result

                #CALL GetParam _Command 3

                #CALL _DoGetFile _FileName _Result _Password

            #ELSE

                #CALL GetParam _Command 1
                #CALL PrintC "Unknown command: " _Result

                #CALL AppendToNetCommandReply "Cannot parse command: " _Command

            #ENDIF

        #ENDIF

    #ELSE

        #CALL AppdendToNetCommandReply "The file server has not been configured."

    #ENDIF

#ENDFUNC

#FUNC _ReadConfigFile Boolean

    #CALL StartDupCheck

    #CALL FileExists "FILESERV.CFG"
    #IF _Result
        #CALL OpenFile 0 "FILESERV.CFG"
        #IF _Result

            #DO
                #LVAR String255 _FromFile
                #LVAR String30 _Keyword
                #LVAR String30 _Param

                #LVAR Boolean _Valid
                #ASGN _Valid FALSE

                #CALL ReadStr 0
                #ASGN _FromFile _Result

                #CALL GetParam _FromFile 1
                #ASGN _Keyword _Result

                #EQ _Keyword "#DIRECTORY"
                #IF _Result
                    #ASGN _Valid TRUE
                    #CALL GetParam _FromFile 2
                    #ASGN _WorkingDirectory _Result
                #ENDIF

                #EQ _Keyword "#LISTTYPE"
                #IF _Result
                    #ASGN _Valid TRUE

                    #CALL GetParam _FromFile 2
                    #ASGN _Param _Result

                    #EQ _Param "NONE"
                    #IF _Result
                        #ASGN _ListType 0
                    #ELSE
                        #EQ _Param "AUTO"
                        #IF _Result
                            #ASGN _ListType 1
                        #ELSE
                            #EQ _Param "FILE"
                            #IF _Result
                                #ASGN _ListType 2
                            #ELSE

                                #CALL PrintC "Unknown #LISTTYPE: " _Param "."
                                #CALL DoCCR

                            #ENDIF
                        #ENDIF
                    #ENDIF
                #ENDIF

                #EQ _Keyword "#NOSEND"
                #IF _Result
                    #ASGN _Valid TRUE
                    #CALL GetParam _FromFile 2
                    #ASGN _Param _Result

                    #CALL AddDupCheck _Param
                #ENDIF

                #EQ _Keyword "#PASSWORD"
                #IF _Result
                    #ASGN _Valid TRUE
                #ENDIF

                #IFNOT _Valid
                    #STR B _Keyword 0 1

                    #EQ _Result "#"
                    #IF _Result
                        #CALL PrintC "Unknown keyword: " _Keyword "."
                        #CALL DoCCR
                    #ENDIF
                #ENDIF

            #CALL FileEOF 0
            #LOOPNOT _Result

            #CALL CloseFile 0

        #ELSE

            #CALL PrintC "Could not open FILESERV.CFG!"
            #CALL DoCCR

            #RET FALSE

        #ENDIF

    #ELSE

        #CALL PrintC "Configuration file FILESERV.CFG does not exist."
        #CALL DoCCR

        #RET FALSE

    #ENDIF

    #RET TRUE
#ENDFUNC

#FUNC _GetPasswordForFile String30 String15 _FileName
    #LVAR String30 _Password
    #ASGN _Password ""

    #CALL FileExists "FILESERV.CFG"
    #IF _Result
        #CALL OpenFile 0 "FILESERV.CFG"
        #IF _Result
            #DO
                #LVAR String255 _FromFile
                #CALL ReadStr 0
                #ASGN _FromFile _Result

                #CALL GetParam _FromFile 1
                #EQ _Result "#PASSWORD"
                #IF _Result
                    #CALL GetParam _FromFile 2
                    #EQ _Result _FileName
                    #IF _Result
                        #CALL GetParam _FromFile 3
                        #ASGN _Password _Result
                    #ENDIF
                #ENDIF

            #CALL FileEOF 0
            #LOOPNOT _Result

            #CALL CloseFile 0
        #ELSE

            #CALL _FatalError "Cannot open FILESERV.CFG!"

        #ENDIF
    #ELSE

        #CALL _FatalError "Cannot find FILESERV.CFG!"

    #ENDIF

    #RET _Password
#ENDFUNC

#FUNC _FatalError Void String128 _ErrorMsg
    #CALL PrintC "Fatal error in server: " _ErrorMsg
    #CALL DoCCR

    #CALL AppendToNetCommandReply "Fatal error in server: " _ErrorMsg
    #EXIT 0
#ENDFUNC

#FUNC _DoFileList Void

    #CALL PrintC "FILELIST Command"
    #CALL DoCCR

    #IF _ListType

        #EQ _ListType 1
        #IF _Result

            We sort backwards because we output the list in reverse
            #CALL GetDirectory _WorkingDirectory *.* 1 TRUE
            #IF _Result

                #LVAR Integer _NumFiles

                #CALL CountDirectory
                #ASGN _NumFiles _Result

                #IF _NumFiles

                    #CALL AppendToNetCommandReply "The following files are available for requesting:5\n\n"
                    #CALL AppendToNetCommandReply "3Name0           3Time/Date0         3Bytes0\n"

                    #WHILE _NumFiles

                        #LVAR String15 _FileName

                        #CALL DirectoryGetName _NumFiles
                        #ASGN _FileName _Result
                        #STR PR _FileName 15
                        #CALL AppendToNetCommandReply _Result
                        #CALL DirectoryGetTime _NumFiles
                        #CALL StrfTime "%x %X" _Result 255
                        #CALL AppendToNetCommandReply _Result
                        #CALL DirectoryGetSize _NumFiles
                        #CALL AddCommasToNumber _Result
                        #CALL AppendToNetCommandReply "  " _Result

                        #CALL _GetPasswordForFile _FileName
                        #NE _Result ""
                        #IF _Result

                            #CALL AppendToNetCommandReply " [password protected]"

                        #ENDIF

                        #CALL AppendToNetCommandReply "\n"

                        Add: get comment from FILEINFO.DAT

                        #SUB _NumFiles 1
                        #ASGN _NumFiles _Result
                    #WEND

                    #CALL DumpDirectory

                #ELSE

                    #CALL AppendToNetCommandReply "No files available."

                #ENDIF

            #ELSE

                #CALL AppendToNetCommandReply "Not enough memory to generate an automatic list."

            #ENDIF

        #ELSE

            #LVAR String128 _PathToListFile

            #STR C _WorkingDirectory "\\FILELIST.TXT"
            #ASGN _PathToListFile _Result

            #CALL FileExists _PathToListFile
            #IF _Result

                #CALL OpenFile 0 _PathToListFile
                #IF _Result

                    #DO

                        #CALL ReadStr 0
                        #CALL AppendToNetCommandReply _Result
                        #CALL AppendToNetCommandReply "\n"

                    #CALL FileEOF
                    #LOOPNOT _Result

                #ELSE

                    #CALL PrintC "Could not open list file " _PathToListFile "."
                    #CALL DoCCR

                    #CALL AppendToNetCommandReply "Could not open list file."

                #ENDIF

            #ELSE

                #CALL PrintC "List file " _PathToListFile " does not exist."
                #CALL DoCCR

                #CALL AppendToNetCommandReply "List file not found."

            #ENDIF

        #ENDIF
    #ELSE

        #CALL AppendToNetCommandReply "File listing is not allowed."

    #ENDIF

    #RET Void
#ENDFUNC

#FUNC _DoGetFile Void String15 _FileName String255 _ToPath String30 _Password
    #CALL IsFilenameLegal _FileName
    #IF _Result

        #CALL _GetPasswordForFile _FileName
        #EQ _Password _Result
        #IF _Result

            #LVAR String10 _FirstNode
            #LVAR Boolean _ToBadNode
            #ASGN _ToBadNode _TRUE

            #LVAR Integer _CharPos

            #CALL StrPos "!" _ToPath
            #ASGN _CharPos _Result

            #IF _CharPos

                #SUB _CharPos 1
                #STR B _ToPath 0 _Result
                #ASGN _FirstNode _Result

            #ELSE

                #ASGN _FirstNode _ToPath

            #ENDIF

            #CALL StrPos "." _FirstNode
            #ASGN _CharPos _Result

            #IF _CharPos
                #SUB _CharPos 1
                #STR B _FirstNode 0 _Result
                #ASGN _FirstNode _Result
            #ENDIF

            #CALL StringIsAddress _FirstNode
            #IF _Result
                #CALL FindNodeByNameOrAddress _FirstNode
                #GE _Result 0
                #IF _Result
                    #CALL CheckForDup _FirstNode
                    #IFNOT _Result
                        #ASGN _ToBadNode FALSE
                    #ELSE
                        #CALL AppendToNetCommandReply "Not allowed to send through node " _FirstNode "."
                    #ENDIF
                #ELSE
                    #CALL AppendToNetCommandReply "First node in specified path (" _FirstNode ") is not a direct connection."
                #ENDIF
            #ELSE
                #CALL AppendToNetCommandReply "Invalid alias in specified path: " _FirstNode "."
            #ENDIF

            #IFNOT _ToBadNode
                #LVAR String255 _ToAddFileName

                #STR C _WorkingDirectory "\\" _FileName
                #ASGN _ToAddFileName

                #CALL FileExists _FileName
                #IF _Result
                    #LVAR Boolean _DeleteAfterAdd

                    #ASGN _ToAddFileName _FileName
                    #ASGN _DeleteAfterAdd FALSE

                    #EQ _ToPath ""
                    #WHILENOT _Result
                        #LVAR Integer _Offset

                        #CALL _FindLastAlias _ToPath
                        #ASGN _Offset _Result

                        #LVAR String255 _File69
                        #CALL GetTransPath
                        #ASGN _File69 _Result

                        #STR B _ToPath _Offset 3
                        #STR C _File69 "\\file69." _Result

                        #SUB _Offset 1
                        #STR B _ToPath 0 _Result
                        #ASGN _ToPath _Result

                        #STR C "?pkzip " _File69 " " _ToAddFileName
                        #CALL RunApplic _Result FALSE
                        #IF _Result
                            #IF _DeleteAfterAdd
                                #CALL DeleteFile _ToAddFileName
                            #ENDIF

                            #CALL FileExists _File69
                            #IF _Result
                                #ASGN _DeleteAfterAdd TRUE
                                #ASGN _ToAddFileName _File69
                            #ELSE
                                #CALL AppendToNetCommandReply "Error creating network packet for file " _FileName "."
                                #RET Void
                            #ENDIF
                        #ELSE
                            #CALL AppendToNetCommandReply "Error creating network packet for file " _FileName "."
                            #RET Void
                        #ENDIF
                    #EQ _ToPath ""
                    #WEND
                #ELSE
                    #CALL AppendToNetCommandReply "File does not exist: " _FileName "."
                #ENDIF
            #ENDIF

        #ELSE

            #CALL AppendToNetCommandReply "Invalid password (" _Password ") given for file " _FileName "."

        #ENDIF
    #ELSE

        #CALL AppendToNetCommandReply "Illegal filename requested: " _FileName

    #ENDIF
    #RET Void
#ENDFUNC

#FUNC _FindLastAlias Integer String255 _ToPath
    #CALL StrPos "!" _ToPath
    #IF _Result
        #LVAR Integer _Last
        #STR E _ToPath
        #ASGN _Last _Result

        #LVAR String1 _TestStr

        #SUB _Last 1
        #STR B _ToPath _Result 1
        #ASGN _TestStr _Result
        #EQ _TestStr "!"
        #IF _Result
            #CALL AppendToNetCommandReply "Invalid path: " _ToPath
            #EXIT 0
        #ENDIF

        #EQ _TestStr " "
        #IF _Result
            #CALL AppendToNetCommandReply "Invalid path: " _ToPath
            #EXIT 0
        #ENDIF

        #LVAR Integer _Length
        #ASGN _Length 3

        #WHILE _Length
            #LVAR Integer _Test

            #SUB _Last 5
            #ADD _Result _Length
            #ASGN _Test _Result

            #STR B _ToPath _Test 1
            #ASGN _TestStr _Result

            #EQ _TestStr "!"
            #IF _Result
                #ADD _Test 1
                #RET _Result
            #ENDIF

            #EQ _TestStr " "
            #IF _Result
                #CALL AppendToNetCommandReply "Invalid path: " _ToPath
                #EXIT 0
            #ENDIF

            #SUB _Length 1
            #ASGN _Length _Result
        #WEND

        #CALL AppendToNetCommandReply "Invalid path: " _ToPath
        #EXIT 0
    #ELSE
        #STR E _ToPath
        #GT _Result 3
        #IF _Result
            #CALL AppendToNetCommandReply "Invalid path: " _ToPath
            #EXIT 0
        #ENDIF

        #CALL StrPos " " _ToPath
        #IF _Result
            #CALL AppendToNetCommandReply "Invalid path: " _ToPath
            #EXIT 0
        #ENDIF

        #RET 0
    #ENDIF
#ENDFUNC
